{
    "patches": [
        {
            "label": "2025-10-14_11-33-19",
            "content": "@@ -72,57 +72,4 @@\n alse\n-%0A%0A    def __str__(self):%0A        return self.__ligado\n",
            "lines": "3"
        },
        {
            "label": "2025-10-14_11-35-37",
            "content": "@@ -125,14 +125,4 @@\n gado\n-%0A    %0A    \n",
            "lines": "6"
        },
        {
            "label": "2025-10-15_10-52-49",
            "content": "@@ -82,1040 +82,57 @@\n def \n-getLigado(self) -%3E bool:%0A        return self.__ligado%0A    %0A    def setStatus(self) -%3E str:%0A        if self.__ligado == False:%0A            return %22Desligado%22%0A        return %22ligado%22%0A    %0A    def setLigar(self) -%3E None:%0A        self.__ligado = True%0A%0A    def setDesligar(self) -%3E None:%0A        self.__ligado = False%0A%0A    def setUsar(self, usar) -%3E str:%0A        if self.__ligado == True:%0A            print(f%22usado por %7Busar%7D minutos%22)%0A            return%0A        print(%22erro: ligue o notebook primeiro%22)%0A    %0Adef main():%0A%0A    notebook = Notebook()%0A%0A    while True:%0A%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(f%22status: %7Bnotebook.setStatus()%7D%22)%0A        elif args%5B0%5D == %22ligar%22:%0A            notebook.setLigar()%0A        elif args%5B0%5D == %22desligar%22:%0A            notebook.setDesligar()%0A        elif args%5B0%5D == %22usar%22:%0A            usar: int = int(args%5B1%5D)%0A            notebook.setUsar(usar)%0Amain()\n+__str__(self):%0A        return self.__ligado%0A    %0A    \n",
            "lines": "8"
        },
        {
            "label": "2025-10-22_11-31-57",
            "content": "@@ -1,281 +1,4 @@\n-class Bateria:%0A    def __init__(self, capacidade):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A    %0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A        %0A\n clas\n@@ -9,16 +9,16 @@\n tebook:%0A\n+\n     def \n@@ -72,54 +72,8 @@\n alse\n-%0A        self.__bateria: Bateria %7C None = None\n %0A%0A  \n@@ -580,105 +580,8 @@\n ro%22)\n-%0A%0A    def setBateri(self) -%3E str:%0A        if self.__bateria == None:%0A            return %22Nenhuma%22\n %0A   \n@@ -815,16 +815,16 @@\n %22show%22:%0A\n+\n         \n@@ -869,41 +869,8 @@\n s()%7D\n-, batrtia: %7Bnotebook.setBateri()%7D\n %22)%0A \n",
            "lines": "46"
        },
        {
            "label": "2025-10-22_17-24-49",
            "content": "@@ -1,1032 +1,78 @@\n-class Bateria:%0A    def __init__(self, capacidade: int = 0):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A    %0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A        %0Aclass Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A%0A    def getLigado(self) -%3E bool:%0A        return self.__ligado%0A    %0A    def setStatus(self) -%3E str:%0A        if self.__ligado == False:%0A            return %22Desligado%22%0A        return %22ligado%22%0A    %0A    def setLigar(self) -%3E None:%0A        if self.__bateria == None:%0A            return %22n%C3%A3o foi poss%C3%ADvel ligar%22%0A        self.__ligado = True%0A%0A    def setDesligar(self) -%3E None:%0A        self.__ligado = False%0A%0A    def setUsar(self, usar) -%3E str:%0A        if self.__ligado == True:%0A            print(f%22usado por %7Busar%7D minutos%22)%0A            return%0A        print(%22erro: ligue o notebook primeiro%22)%0A%0A    def setBateri(self) -%3E str:%0A\n+@@ -45,17 +45,8 @@%0A dade%0A-: int = 0%0A ):%250A %0A@@ -623,87 +623,8 @@%0A ne:%250A%0A-\n     \n@@ -101,17 +101,19 @@\n == None:\n-%0A\n+%250A\n         \n@@ -127,584 +127,52 @@\n urn \n-%22Nenhuma%22%0A    %0Adef main():%0A%0A    notebook = Notebook()%0A%0A    while True:%0A%0A        line: str = input()%0A        print(%22$%22 + line)%0A        args: list%5Bstr%5D = line.split(%22 %22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(f%22status: %7Bnotebook.setStatus()%7D, batrtia: %7Bnotebook.setBateri()%7D%22)%0A        elif args%5B0%5D == %22ligar%22:%0A            notebook.setLigar()%0A        elif args%5B0%5D == %22desligar%22:%0A            notebook.setDesligar()%0A        elif args%5B0%5D == %22usar%22:%0A            usar: int = int(args%5B1%5D)%0A            notebook.setUsar(usar)%0Amain()\n+%2522n%25C3%25A3o foi poss%25C3%25ADvel ligar%2522%250A%0A     %0A\n",
            "lines": "8"
        },
        {
            "label": "2025-10-22_17-37-13",
            "content": "@@ -278,217 +278,12 @@\n     \n-%0A\n     \n-def setBateriInit(self, batInit: int) -%3E None:%0A        self.__capacidade = batInit%0A        self.__carga = batInit%0A    %0A    def __str__(self) -%3E str:%0A        return f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22%0A\n %0Acla\n@@ -675,22 +675,23 @@\n         \n-print(\n+return \n %22n%C3%A3o foi\n@@ -710,29 +710,8 @@\n gar%22\n-)%0A            return \n %0A   \n@@ -1094,84 +1094,8 @@\n    %0A\n-    def setBateriaIncluida(self) -%3E None:%0A        self.__bateria = Bateria%0A%0A\n def \n@@ -1132,32 +1132,8 @@\n ok()\n-%0A    bateria = Bateria()\n %0A%0A  \n@@ -1653,266 +1653,8 @@\n ar)%0A\n-        elif args%5B0%5D == %22bateria%22:%0A            batInit: int = int(args%5B1%5D)%0A            bateria.setBateriInit(batInit)%0A        elif args%5B0%5D == %22mostrar%22:%0A            print(bateria)%0A        elif args%5B0%5D == %22incluir%22:%0A            notebook.setBateriaIncluida()%0A%0A\n main\n",
            "lines": "64"
        },
        {
            "label": "2025-10-23_08-48-04",
            "content": "@@ -504,34 +504,8 @@\n ok:%0A\n-%0A    bateria = Bateria()%0A%0A\n     \n@@ -1314,41 +1314,8 @@\n ma%22%0A\n-        return f%22%7Bself.bateria%7D%22%0A\n     \n@@ -1386,22 +1386,17 @@\n a = \n- self.b\n+B\n ateria%0A\n+%0A\n def \n",
            "lines": "84"
        },
        {
            "label": "2025-10-23_10-43-05",
            "content": "@@ -396,95 +396,8 @@\n Init\n-%0A%0A    def setDecrement(self, decrement: int) -%3E None:%0A        self.__carga -= decrement\n %0A   \n@@ -1128,105 +1128,8 @@\n ue:%0A\n-            if usar %3C= self.bateria.__carga:%0A                self.bateria.setDecrement(usar)%0A    \n     \n@@ -1187,57 +1187,15 @@\n     \n-    \n return%0A\n-            return %22erro no if doido%22%0A\n     \n@@ -1355,26 +1355,24 @@\n urn f%22%7Bself.\n-__\n bateria%7D%22%0A  \n@@ -1455,17 +1455,16 @@\n bateria%0A\n-%0A\n def main\n@@ -1493,16 +1493,40 @@\n tebook()\n+%0A    bateria = Bateria()\n %0A%0A    wh\n@@ -2125,25 +2125,16 @@\n         \n-notebook.\n bateria.\n@@ -2209,25 +2209,16 @@\n   print(\n-notebook.\n bateria)\n@@ -2295,14 +2295,15 @@\n luida()%0A\n+%0A\n main()\n",
            "lines": "87"
        },
        {
            "label": "2025-10-27_21-26-32",
            "content": "@@ -1,362 +1,4 @@\n-class Carregador:%0A    def __init__(self, potencia: int = 0):%0A        self.__potencia: int = potencia%0A%0A    def getPotencia(self) -%3E int:%0A        return self.__potencia%0A    %0A    def setCarregadorInit(self, carregadorInit: int) -%3E None:%0A        self.__potencia = carregadorInit%0A    %0A    def __str__(self) -%3E str:%0A        return f%22(potencia %7Bself.__potencia%7D)%22%0A%0A\n clas\n@@ -489,94 +489,8 @@\n    %0A\n-    def setIncrement(self, increment: int) -%3E None:%0A        self.__carga += increment%0A\n     \n@@ -587,16 +587,42 @@\n tebook:%0A\n+%0A    bateria = Bateria()%0A%0A\n     def \n@@ -722,60 +722,8 @@\n None\n-%0A        self.__carregador: Carregador %7C None = None\n %0A%0A  \n@@ -922,17 +922,20 @@\n     def \n-l\n+setL\n igar(sel\n@@ -978,38 +978,8 @@\n a ==\n- None and self.__carregador ==\n  Non\n@@ -1037,18 +1037,20 @@\n     \n-else:%0A    \n+    return %0A\n     \n@@ -1083,17 +1083,20 @@\n     def \n-d\n+setD\n esligar(\n@@ -1149,17 +1149,20 @@\n     def \n-u\n+setU\n sar(self\n@@ -1167,30 +1167,24 @@\n lf, usar\n-: int\n ) -%3E \n-None\n+str\n :%0A      \n@@ -1235,34 +1235,32 @@\n sar %3C= self.\n-__\n bateria.\n getCarga() o\n@@ -1251,43 +1251,15 @@\n ria.\n-getCarga() or self.__carregador %3E 0\n+__carga\n :%0A  \n@@ -1276,380 +1276,39 @@\n     \n-if \n self.\n-__carregador %3E 0:%0A                    usar = usar * self.__carregador.__potencia%0A                    self.__bateria.setIncrement(usar)%0A                    print(%22Notebook utilizado com sucesso%22)%0A                    return%0A                self.__bateria.setDecrement(usar)%0A                if self.__bateria.getCarga() == 0:%0A                    self.__ligado = False\n+bateria.setDecrement(usar)\n %0A   \n@@ -1406,35 +1406,20 @@\n erro\n-: capacidade maxima exedida\n+ no if doido\n %22%0A  \n@@ -1479,25 +1479,24 @@\n ef setBateri\n-a\n (self) -%3E st\n@@ -1637,26 +1637,8 @@\n self\n-, bateria: Bateria\n ) -%3E\n@@ -1672,473 +1672,60 @@\n ia =\n- bateria%0A    %0A    def rmBateria(self) -%3E None:%0A      \n   self.\n-__\n bateria\n- = None%0A        return %22bateria removida%22%0A    %0A    def setCarregador(self) -%3E str:%0A        if self.__carregador == None:%0A            return %22Desconectado%22%0A        return f%22%7Bself.__carregador%7D%22%0A    %0A    def setCarregadorIncluir(self, carregador: Carregador) -%3E None:%0A        self.__carregador = carregador%0A%0Adef main():%0A%0A    notebook = Notebook()%0A    bateria = Bateria()%0A    carregador = Carregador\n+%0A%0Adef main():%0A%0A    notebook = Notebook\n ()%0A%0A\n@@ -2001,49 +2001,8 @@\n teri\n-a()%7D, Carregador: %7Bnotebook.setCarregador\n ()%7D%22\n@@ -2057,17 +2057,20 @@\n otebook.\n-l\n+setL\n igar()%0A \n@@ -2125,17 +2125,20 @@\n otebook.\n-d\n+setD\n esligar(\n@@ -2229,17 +2229,20 @@\n otebook.\n-u\n+setU\n sar(usar\n@@ -2326,24 +2326,33 @@\n             \n+notebook.\n bateria.setB\n@@ -2423,16 +2423,25 @@\n   print(\n+notebook.\n bateria)\n@@ -2520,376 +2520,8 @@\n ida(\n-bateria)%0A        elif args%5B0%5D == %22remover%22:%0A            notebook.rmBateria()%0A        elif args%5B0%5D == %22carregador%22:%0A            carregadorInit: int = int(args%5B1%5D)%0A            carregador.setCarregadorInit(carregadorInit)%0A        elif args%5B0%5D == %22cabo%22:%0A            print(carregador)%0A        elif args%5B0%5D == %22conctar%22:%0A            notebook.setCarregadorIncluir(carregador\n )%0Ama\n",
            "lines": "92"
        },
        {
            "label": "2025-10-28_09-45-30",
            "content": "@@ -929,17 +929,16 @@\n crement%0A\n-%0A\n     def \n@@ -1712,32 +1712,40 @@\n :%0A            if\n+ usar %3C=\n  self.__bateria \n@@ -1743,24 +1743,27 @@\n _bateria\n- != None\n+.getCarga()\n  or self\n@@ -1768,39 +1768,35 @@\n lf.__carregador \n-!= None\n+%3E 0\n :%0A              \n@@ -1822,15 +1822,11 @@\n dor \n-!= None\n+%3E 0\n :%0A  \n@@ -1843,30 +1843,20 @@\n         \n-increment: int\n+usar\n  = usar \n@@ -1879,21 +1879,18 @@\n dor.\n-getP\n+__p\n otencia\n-()\n %0A   \n@@ -1934,25 +1934,20 @@\n crement(\n-increment\n+usar\n )%0A      \n@@ -2046,21 +2046,8 @@\n     \n- elif usar %3E=\n  sel\n@@ -2062,340 +2062,120 @@\n ria.\n-getCarga():%0A                    self.__ligado = False%0A                    pri\n+setDecreme\n nt(\n-f%22\n usa\n-do por %7Bself.__bateria.getCarga()%7D minutos, notebook desligado%22)%0A                    self.__bateria.setDecrement(self.__bateria.getCarga())%0A                    return%0A                else:%0A                    self.__bateria.setDecrement(usar)%0A    \n+r)%0A                if self.__bateria.getCarga() == 0:%0A                    self.__ligado = False%0A\n     \n@@ -2221,20 +2221,16 @@\n nutos%22)%0A\n-    \n         \n",
            "lines": "135"
        },
        {
            "label": "2025-10-28_11-20-21",
            "content": "class Carregador:\n    def __init__(self, potencia: int = 0):\n        self.__potencia: int = potencia\n\n    def getPotencia(self) -> int:\n        return self.__potencia\n    \n    def setCarregadorInit(self, carregadorInit: int) -> None:\n        self.__potencia = carregadorInit\n    \n    def __str__(self) -> str:\n        return f\"(potencia {self.__potencia})\"\n\nclass Bateria:\n    def __init__(self, capacidade: int = 0):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\n    def getCapacidade(self) -> int:\n        return self.__capacidade\n    \n    def getCarga(self) -> int:\n        return self.__carga\n    \n    def setBateriInit(self, batInit: int) -> None:\n        self.__capacidade = batInit\n        self.__carga = batInit\n\n    def setDecrement(self, decrement: int) -> None:\n        self.__carga -= decrement\n    \n    def setIncrement(self, increment: int) -> None:\n        self.__carga += increment\n\n    def __str__(self) -> str:\n        return f\"({self.__carga}/{self.__capacidade})\"\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def getLigado(self) -> bool:\n        return self.__ligado\n    \n    def setStatus(self) -> str:\n        if self.__ligado == False:\n            return \"Desligado\"\n        return \"ligado\"\n    \n    def ligar(self) -> None:\n        if self.__bateria == None and self.__carregador == None:\n            print(\"n\u00e3o foi poss\u00edvel ligar\")\n        else:\n            self.__ligado = True\n\n    def desligar(self) -> None:\n        self.__ligado = False\n\n    def usar(self, usar: int) -> None:\n        if self.__ligado == True:\n            if self.__bateria != None or self.__carregador != None:\n                if self.__carregador != None:\n                    increment: int = usar * self.__carregador.getPotencia()\n                    self.__bateria.setIncrement(increment)\n                    print(\"Notebook utilizado com sucesso\")\n                    return\n                elif usar >= self.__bateria.getCarga():\n                    self.__ligado = False\n                    print(f\"usado por {self.__bateria.getCarga()} minutos, notebook desligado\")\n                    self.__bateria.setDecrement(self.__bateria.getCarga())\n                    return\n                else:\n                    self.__bateria.setDecrement(usar)\n                    print(f\"usado por {usar} minutos\")\n                    return\n            return \"erro: capacidade maxima exedida\"\n        print(\"erro: ligue o notebook primeiro\")\n\n    def setBateria(self) -> str:\n        if self.__bateria == None:\n            return \"Nenhuma\"\n        return f\"{self.__bateria}\"\n    \n    def setBateriaIncluida(self, bateria: Bateria) -> None:\n        self.__bateria = bateria\n    \n    def rmBateria(self) -> None:\n        self.__bateria = None\n        return \"bateria removida\"\n    \n    def setCarregador(self) -> str:\n        if self.__carregador == None:\n            return \"Desconectado\"\n        return f\"{self.__carregador}\"\n    \n    def setCarregadorIncluir(self, carregador: Carregador) -> None:\n        self.__carregador = carregador\n\ndef main():\n\n    notebook = Notebook()\n    bateria = Bateria()\n    carregador = Carregador()\n\n    while True:\n\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split(\" \")\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(f\"status: {notebook.setStatus()}, batrtia: {notebook.setBateria()}, Carregador: {notebook.setCarregador()}\")\n        elif args[0] == \"ligar\":\n            notebook.ligar()\n        elif args[0] == \"desligar\":\n            notebook.desligar()\n        elif args[0] == \"usar\":\n            usar: int = int(args[1])\n            notebook.usar(usar)\n        elif args[0] == \"bateria\":\n            batInit: int = int(args[1])\n            bateria.setBateriInit(batInit)\n        elif args[0] == \"mostrar\":\n            print(bateria)\n        elif args[0] == \"incluir\":\n            notebook.setBateriaIncluida(bateria)\n        elif args[0] == \"remover\":\n            notebook.rmBateria()\n        elif args[0] == \"carregador\":\n            carregadorInit: int = int(args[1])\n            carregador.setCarregadorInit(carregadorInit)\n        elif args[0] == \"cabo\":\n            print(carregador)\n        elif args[0] == \"conctar\":\n            notebook.setCarregadorIncluir(carregador)\nmain()",
            "lines": "140"
        }
    ]
}